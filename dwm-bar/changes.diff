diff --git a/bar-functions/dwm_battery.sh b/bar-functions/dwm_battery.sh
index 6321e64..90482af 100755
--- a/bar-functions/dwm_battery.sh
+++ b/bar-functions/dwm_battery.sh
@@ -12,9 +12,9 @@ dwm_battery () {
     printf "%s" "$SEP1"
     if [ "$IDENTIFIER" = "unicode" ]; then
         if [ "$STATUS" = "Charging" ]; then
-            printf "üîå %s%% %s" "$CHARGE" "$STATUS"
+            printf "%s%% %s" "$CHARGE" "$STATUS"
         else
-            printf "üîã %s%% %s" "$CHARGE" "$STATUS"
+            printf "%s%% %s" "$CHARGE" "$STATUS"
         fi
     else
         printf "BAT %s%% %s" "$CHARGE" "$STATUS"
diff --git a/bar-functions/dwm_battery_with_emoji.sh b/bar-functions/dwm_battery_with_emoji.sh
new file mode 100755
index 0000000..6321e64
--- /dev/null
+++ b/bar-functions/dwm_battery_with_emoji.sh
@@ -0,0 +1,26 @@
+#!/bin/sh
+
+# A dwm_bar function to read the battery level and status
+# Joe Standring <git@joestandring.com>
+# GNU GPLv3
+
+dwm_battery () {
+    # Change BAT1 to whatever your battery is identified as. Typically BAT0 or BAT1
+    CHARGE=$(cat /sys/class/power_supply/BAT1/capacity)
+    STATUS=$(cat /sys/class/power_supply/BAT1/status)
+
+    printf "%s" "$SEP1"
+    if [ "$IDENTIFIER" = "unicode" ]; then
+        if [ "$STATUS" = "Charging" ]; then
+            printf "üîå %s%% %s" "$CHARGE" "$STATUS"
+        else
+            printf "üîã %s%% %s" "$CHARGE" "$STATUS"
+        fi
+    else
+        printf "BAT %s%% %s" "$CHARGE" "$STATUS"
+    fi
+    printf "%s\n" "$SEP2"
+}
+
+dwm_battery
+
diff --git a/bar-functions/dwm_date.sh b/bar-functions/dwm_date.sh
index 654def1..48c312d 100755
--- a/bar-functions/dwm_date.sh
+++ b/bar-functions/dwm_date.sh
@@ -8,7 +8,7 @@
 dwm_date () {
     printf "%s" "$SEP1"
     if [ "$IDENTIFIER" = "unicode" ]; then
-        printf "üìÜ %s" "$(date "+%a %d-%m-%y %T")"
+        printf "%s" "$(date "+%a %d-%m-%y %T")"
     else
         printf "DAT %s" "$(date "+%a %d-%m-%y %T")"
     fi
diff --git a/bar-functions/dwm_date_with_emoji.sh b/bar-functions/dwm_date_with_emoji.sh
new file mode 100755
index 0000000..654def1
--- /dev/null
+++ b/bar-functions/dwm_date_with_emoji.sh
@@ -0,0 +1,18 @@
+#!/bin/sh
+
+# A dwm_bar function that shows the current date and time
+# Joe Standring <git@joestandring.com>
+# GNU GPLv3
+
+# Date is formatted like like this: "[Mon 01-01-00 00:00:00]"
+dwm_date () {
+    printf "%s" "$SEP1"
+    if [ "$IDENTIFIER" = "unicode" ]; then
+        printf "üìÜ %s" "$(date "+%a %d-%m-%y %T")"
+    else
+        printf "DAT %s" "$(date "+%a %d-%m-%y %T")"
+    fi
+    printf "%s\n" "$SEP2"
+}
+
+dwm_date
diff --git a/bar-functions/dwm_network_speed.sh b/bar-functions/dwm_network_speed.sh
index 1a9e789..09a233a 100755
--- a/bar-functions/dwm_network_speed.sh
+++ b/bar-functions/dwm_network_speed.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/usr/bin/bash
 
 # A dwm_bar function to show the speed of download and upload.
 # Johan Chane <johanchanex@gmail.com>
diff --git a/bar-functions/dwm_networkmanager.sh b/bar-functions/dwm_networkmanager.sh
index db39a7e..99d7d4c 100755
--- a/bar-functions/dwm_networkmanager.sh
+++ b/bar-functions/dwm_networkmanager.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/usr/bin/sh
 
 # A dwm_bar function to show the current network connection/SSID, private IP, and public IP using NetworkManager
 # Joe Standring <git@joestandring.com>
@@ -16,9 +16,9 @@ dwm_networkmanager () {
     PUBLIC=$(curl -s https://ipinfo.io/ip)
 
     if [ "$IDENTIFIER" = "unicode" ]; then
-        export __DWM_BAR_NETWORKMANAGER__="${SEP1}üåê ${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
+        export __DWM_BAR_NETWORKMANAGER__="${SEP1}${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
     else
-        export __DWM_BAR_NETWORKMANAGER__="${SEP1}NET ${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
+        export __DWM_BAR_NETWORKMANAGER__="${SEP1}${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
     fi
 }
 
diff --git a/bar-functions/dwm_networkmanager_with_emoji.sh b/bar-functions/dwm_networkmanager_with_emoji.sh
new file mode 100755
index 0000000..e08c863
--- /dev/null
+++ b/bar-functions/dwm_networkmanager_with_emoji.sh
@@ -0,0 +1,25 @@
+#!/usr/bin/sh
+
+# A dwm_bar function to show the current network connection/SSID, private IP, and public IP using NetworkManager
+# Joe Standring <git@joestandring.com>
+# GNU GPLv3
+
+# Dependencies: NetworkManager, curl
+
+dwm_networkmanager () {
+    CONNAME=$(nmcli -a | grep 'Wired connection' | awk 'NR==1{print $1}')
+    if [ "$CONNAME" = "" ]; then
+        CONNAME=$(nmcli -t -f active,ssid dev wifi | grep '^yes' | cut -c 5-)
+    fi
+
+    PRIVATE=$(nmcli -a | grep 'inet4 192' | awk '{print $2}')
+    PUBLIC=$(curl -s https://ipinfo.io/ip)
+
+    if [ "$IDENTIFIER" = "unicode" ]; then
+        export __DWM_BAR_NETWORKMANAGER__="${SEP1}üåê ${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
+    else
+        export __DWM_BAR_NETWORKMANAGER__="${SEP1}NET ${CONNAME} ${PRIVATE} ${PUBLIC}${SEP2}"
+    fi
+}
+
+dwm_networkmanager
diff --git a/bar-functions/dwm_resources.sh b/bar-functions/dwm_resources.sh
index 61beecc..365557a 100755
--- a/bar-functions/dwm_resources.sh
+++ b/bar-functions/dwm_resources.sh
@@ -23,9 +23,9 @@ dwm_resources () {
 
 	printf "%s" "$SEP1"
 	if [ "$IDENTIFIER" = "unicode" ]; then
-		printf "üíª MEM %s/%s CPU %s STO %s/%s: %s" "$MEMUSED" "$MEMTOT" "$CPU" "$STOUSED" "$STOTOT" "$STOPER"
+		printf "MEM %s/%s CPU %s" "$MEMUSED" "$MEMTOT" "$CPU"
 	else
-		printf "STA | MEM %s/%s CPU %s STO %s/%s: %s" "$MEMUSED" "$MEMTOT" "$CPU" "$STOUSED" "$STOTOT" "$STOPER"
+		printf "STA | MEM %s/%s CPU %s" "$MEMUSED" "$MEMTOT" "$CPU"
 	fi
 	printf "%s\n" "$SEP2"
 }
diff --git a/bar-functions/dwm_resources_with_emoji.sh b/bar-functions/dwm_resources_with_emoji.sh
new file mode 100755
index 0000000..61beecc
--- /dev/null
+++ b/bar-functions/dwm_resources_with_emoji.sh
@@ -0,0 +1,33 @@
+#!/bin/sh
+
+# A dwm_bar function to display information regarding system memory, CPU temperature, and storage
+# Joe Standring <git@joestandring.com>
+# GNU GPLv3
+
+df_check_location='/home'
+
+dwm_resources () {
+	# get all the infos first to avoid high resources usage
+	free_output=$(free -h | grep Mem)
+	df_output=$(df -h $df_check_location | tail -n 1)
+	# Used and total memory
+	MEMUSED=$(echo $free_output | awk '{print $3}')
+	MEMTOT=$(echo $free_output | awk '{print $2}')
+	# CPU temperature
+	CPU=$(top -bn1 | grep Cpu | awk '{print $2}')%
+	#CPU=$(sysctl -n hw.sensors.cpu0.temp0 | cut -d. -f1)
+	# Used and total storage in /home (rounded to 1024B)
+	STOUSED=$(echo $df_output | awk '{print $3}')
+	STOTOT=$(echo $df_output | awk '{print $2}')
+	STOPER=$(echo $df_output | awk '{print $5}')
+
+	printf "%s" "$SEP1"
+	if [ "$IDENTIFIER" = "unicode" ]; then
+		printf "üíª MEM %s/%s CPU %s STO %s/%s: %s" "$MEMUSED" "$MEMTOT" "$CPU" "$STOUSED" "$STOTOT" "$STOPER"
+	else
+		printf "STA | MEM %s/%s CPU %s STO %s/%s: %s" "$MEMUSED" "$MEMTOT" "$CPU" "$STOUSED" "$STOTOT" "$STOPER"
+	fi
+	printf "%s\n" "$SEP2"
+}
+
+dwm_resources
diff --git a/dwm_bar.sh b/dwm_bar.sh
index 0339093..f21776a 100755
--- a/dwm_bar.sh
+++ b/dwm_bar.sh
@@ -1,4 +1,4 @@
-#!/bin/sh
+#!/usr/bin/bash
 
 # A modular status bar for dwm
 # Joe Standring <git@joestandring.com>
@@ -18,27 +18,27 @@ DIR=$(dirname "$LOC")
 export IDENTIFIER="unicode"
 
 # Change the charachter(s) used to seperate modules. If two are used, they will be placed at the start and end.
-export SEP1="["
-export SEP2="]"
+export SEP1="|"
+export SEP2="|"
 
 # Import the modules
 #. "$DIR/bar-functions/dwm_alarm.sh"
 #. "$DIR/bar-functions/dwm_alsa.sh"
 #. "$DIR/bar-functions/dwm_backlight.sh"
-#. "$DIR/bar-functions/dwm_battery.sh"
+. "$DIR/bar-functions/dwm_battery.sh"
 #. "$DIR/bar-functions/dwm_ccurse.sh"
 #. "$DIR/bar-functions/dwm_cmus.sh"
 #. "$DIR/bar-functions/dwm_connman.sh"
 #. "$DIR/bar-functions/dwm_countdown.sh"
 #. "$DIR/bar-functions/dwm_currency.sh"
-#. "$DIR/bar-functions/dwm_date.sh"
+. "$DIR/bar-functions/dwm_date.sh"
 #. "$DIR/bar-functions/dwm_keyboard.sh"
 #. "$DIR/bar-functions/dwm_loadavg.sh"
 #. "$DIR/bar-functions/dwm_mail.sh"
 #. "$DIR/bar-functions/dwm_mpc.sh"
-#. "$DIR/bar-functions/dwm_networkmanager.sh"
+. "$DIR/bar-functions/dwm_networkmanager.sh"
 #. "$DIR/bar-functions/dwm_pulse.sh"
-#. "$DIR/bar-functions/dwm_resources.sh"
+. "$DIR/bar-functions/dwm_resources.sh"
 #. "$DIR/bar-functions/dwm_spotify.sh"
 #. "$DIR/bar-functions/dwm_transmission.sh"
 #. "$DIR/bar-functions/dwm_vpn.sh"
@@ -48,8 +48,8 @@ export SEP2="]"
 parallelize() {
     while true
     do
-        printf "Running parallel processes\n"
-        #dwm_networkmanager &
+        #printf "Running parallel processes\n"
+        dwm_networkmanager &
         #dwm_weather &
         sleep 5
     done
@@ -64,29 +64,30 @@ do
     #upperbar="$upperbar$(dwm_alarm)"
     #upperbar="$upperbar$(dwm_alsa)"
     #upperbar="$upperbar$(dwm_backlight)"
-    #upperbar="$upperbar$(dwm_battery)"
+    upperbar="$upperbar$(dwm_battery)"
     #upperbar="$upperbar$(dwm_ccurse)"
     #upperbar="$upperbar$(dwm_cmus)"
     #upperbar="$upperbar$(dwm_connman)"
     #upperbar="$upperbar$(dwm_countdown)"
     #upperbar="$upperbar$(dwm_currency)"
-    #upperbar="$upperbar$(dwm_date)"
+    upperbar="$upperbar$(dwm_date)"
     #upperbar="$upperbar$(dwm_keyboard)"
     #upperbar="$upperbar$(dwm_loadavg)"
     #upperbar="$upperbar$(dwm_mail)"
     #upperbar="$upperbar$(dwm_mpc)"
     #upperbar="$upperbar$(dwm_pulse)"
-    #upperbar="$upperbar$(dwm_resources)"
+    upperbar="$upperbar$(dwm_resources)"
     #upperbar="$upperbar$(dwm_spotify)"
     #upperbar="$upperbar$(dwm_transmission)"
     #upperbar="$upperbar$(dwm_vpn)"
-    #upperbar="$upperbar${__DWM_BAR_NETWORKMANAGER__}"
+    upperbar="$upperbar${__DWM_BAR_NETWORKMANAGER__}"
     #upperbar="$upperbar${__DWM_BAR_WEATHER__}"
     #upperbar="$upperbar$(dwm_network_speed)"; dwm_network_speed_record
    
     # Append results of each func one by one to the lowerbar string
     lowerbar=""
     
+    echo "$upperbar"
     xsetroot -name "$upperbar"
     # Uncomment the line below to enable the lowerbar 
     #xsetroot -name "$upperbar;$lowerbar"
